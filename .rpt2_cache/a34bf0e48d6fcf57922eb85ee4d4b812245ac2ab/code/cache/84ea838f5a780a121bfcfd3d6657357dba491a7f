{"code":"export default class IStringEscape {\r\n    static escapeReg(source) {\r\n        return String(source).replace(new RegExp(\"([.*+?^=!:\\x24{}()|[\\\\]\\/\\\\\\\\])\", \"g\"), '\\\\\\x241');\r\n    }\r\n    static escapeHtml(source) {\r\n        return String(source)\r\n            .replace(/&/g, '&amp;')\r\n            .replace(/</g, '&lt;')\r\n            .replace(/>/g, '&gt;')\r\n            .replace(/\"/g, \"&quot;\")\r\n            .replace(/'/g, \"&#39;\");\r\n    }\r\n    static unEscapeHtml(source) {\r\n        let str = String(source)\r\n            .replace(/&quot;/g, '\"')\r\n            .replace(/&lt;/g, '<')\r\n            .replace(/&gt;/g, '>')\r\n            .replace(/&amp;/g, \"&\");\r\n        return str.replace(/&#([\\d]+);/g, function (_0, _1) {\r\n            return String.fromCharCode(parseInt(_1, 10));\r\n        });\r\n    }\r\n    static escapeJavaScript(source) {\r\n        return '';\r\n    }\r\n    static unEscapeJavaScript(source) {\r\n        return '';\r\n    }\r\n}\r\n","dts":{"name":"D:/work/jsdk-lang/dist/typings/IStringEscape.d.ts","text":"export default class IStringEscape {\r\n    static escapeReg(source: string): string;\r\n    static escapeHtml(source: string): string;\r\n    static unEscapeHtml(source: string): string;\r\n    static escapeJavaScript(source: string): string;\r\n    static unEscapeJavaScript(source: string): string;\r\n}\r\n"}}
